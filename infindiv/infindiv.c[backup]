/*
** infindiv.c for infindiv in /home/cedric/delivery/CPool_bistro-matic/divinf
** 
** Made by Cédric Thomas
** Login   <cedric@epitech.net>
** 
** Started on  Fri Oct 28 13:28:36 2016 Cédric Thomas
** Last update Mon Oct 31 09:11:01 2016 Cédric Thomas
*/

#include <stdlib.h>
#include "my.h"
#include "bistro.h"

char	*shiftstr(char *str, int dec)
{
  char	*shifted;
  int	i;
  int	j;

  i = 0;
  j = 0;
  shifted = malloc(sizeof(char) * (my_strlen(str) + dec + 1)); 
  while (i < my_strlen(str) + dec)
    {
      if (str[j] != '\0')
	{
	  shifted[i] = str[j]; 
	  j += 1;
	}
      else
	shifted[i] = '0';
      i += 1;
    }
  shifted[i] = '\0';
  return (shifted);  
}

char	*div_mod(t_ci *nb1, t_ci *nb2)
{
  char	*result;
  
  result = my_strdup("0");
  while (t_ci_cmp(nb1, nb2) != -1)
    {
      result = selector(result, "1");
      nb1->n = selector(nb1->n, my_strcatdup("-", nb2->n));
      nb1->l = my_strlen(nb1->n);
    }
  return (result);
}


char	*infindiv(char *a, char *b)
{
  t_ci	nb1;
  t_ci	nb2;
  char	*result;

  if (transfert(&nb1, a) != 0)
    return ("0");
  if (transfert(&nb2, b) != 0)
    return ("0");
  if (t_ci_cmp(&nb1, &nb2) == -1)
    return ("0");
  if (t_ci_cmp(&nb1, &nb2) == 0)
    return ("1");
  result = div_mod(&nb1, &nb2);
  return (result);
}
